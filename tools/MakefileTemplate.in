###################################################################
# This Makefile was created using the ((PROGRAM)) script
# for project ((PROJECT))
# ((PROGRAM)) is part of Bayesian Analysis Toolkit (BAT).
# BAT can be downloaded from http://mpp.mpg.de/bat
###################################################################
#
# Run 'make' to compile the program and 'make clean' to remove
# all compiled parts and 'clean' the directory.
#
# You might need to adjust the CXXFLAGS and LIBS based on
# the BAT installation on your system. Consult the gmake manual
# for details.
#
###################################################################

# compiler and flags
CXX          = @CXX@
CXXFLAGS     = -g -O2 -Wall -fPIC -Wno-deprecated @CXXFLAGS@
LD           = @LD@
LDFLAGS      = -g -O2 @LDFLAGS@

# ----------------------------------------------------------------------
# The following definitions rely on the script bat-config being
# available in $PATH. If BAT is not installed in the standard system
# directories, update $PATH accordingly.

CXXFLAGS += `bat-config --cflags`
LIBS := `bat-config --libs`

# List of all classes (models) used in the program
# Add classes to the end. Backslash indicates continuation
# on the next line
CXXSRCS = ((MODEL)).cxx
PRGSRCS = run((PROJECT)).cxx

# ----------------------------------------------------------------------
# don't change lines below unless you know what you're doing
#

OBJSDIR = obj
BINDIR  = bin

CXXOBJS = $(addprefix $(OBJSDIR)/,$(CXXSRCS:.cxx=.o))
PRGOBJS = $(addprefix $(OBJSDIR)/,$(PRGSRCS:.cxx=.o))
MYPROGS = $(addprefix $(BINDIR)/,$(basename $(PRGSRCS)))

GARBAGE = $(CXXOBJS) $(PRGOBJS) *.o *~ link.d $(MYPROGS)

# targets
all : $(MYPROGS)

link.d : $(patsubst %.cxx,%.h,$(CXXSRCS))
	$(CXX) -MM $(CXXFLAGS) $(CXXSRCS) $(PRGSRCS) > link.d;

-include link.d

$(OBJSDIR)/%.o : %.cxx | $(OBJSDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(BINDIR)/% : $(OBJSDIR)/%.o $(CXXOBJS) | $(BINDIR)
	$(CXX) $(LDFLAGS) $^ $(LIBS) -o $@

$(OBJSDIR):
	mkdir $(OBJSDIR)

$(BINDIR):
	mkdir $(BINDIR)

clean :
	rm -f $(GARBAGE)
	rmdir $(OBJSDIR)
	rmdir $(BINDIR)

print :
	@echo compiler  : $(CXX)
	@echo c++ srcs  : $(CXXSRCS) $(PRGSRCS)
	@echo c++ objs  : $(CXXOBJS) $(PRGOBJS)
	@echo c++ flags : $(CXXFLAGS)
	@echo ld flags  : $(LDFLAGS)
	@echo libs      : $(LIBS)
